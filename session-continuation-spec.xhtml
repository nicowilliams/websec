<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "file:///home/nico/I-Ds/test/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="GENERATOR" content="LyX 2.0.0" />
<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
<title>Hypertext Transport Protocol (HTTP) Session Continuation Protocol</title>

<!-- Text Class Preamble -->
<style type="text/css">
div.toc {
margin: 2em 0em;
border-style: solid;
border-width: 2px 0px;
padding: 1em 0em;
}
div.tochead { font-size: x-large; font-weight: bold; }
div.lyxtoc-0 {
margin: 2em 0em 0em 0em;
font-size: xx-large;
font-weight: bold;
}
div.lyxtoc-1 {
margin: 1em 0em 0em 0em;
font-size: x-large;
font-weight: bold;
}
div.lyxtoc-2 {
margin: 0em 0em 0em 1em;
font-size: large;
font-weight: normal;
}
div.lyxtoc-3 { margin: 0em 0em 0em 0.5em; font-size: medium; }
div.lyxtoc-4 { margin: 0em 0em 0em 0.5em; }
div.lyxtoc-5 { margin: 0em 0em 0em 0.5em; }
div.lyxtoc-6 { margin: 0em 0em 0em 0.5em; }
a.tocentry {
text-decoration: none;
color: black;
}
a.tocentry:visited { color: black; }
a.tocarrow {
font-weight: bold;
text-decoration: none;
color: #909090;
}
a.tocarrow:visited { color: #C0C0C0; }
</style>

<!-- Preamble Snippets -->

<!-- Layout-provided Styles -->
<style type='text/css'>
h1.title {
font-size: x-large;
margin-bottom: 1ex;
text-align: center;

}
div.standard {
text-align: left;

}
div.plain_layout {
text-align: left;

}
div.author {
font-size: large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: center;

}
div.abstract {
font-size: small;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
margin-right: 3ex;
text-align: left;

}
div.abstract_label {
font-weight: bold;
font-size: large;
text-align: center;

}

div.abstract {
margin: 4ex;
}
div.abstract_item {
font-size: small;
padding-top: 1ex;
}
div.abstract_label {
font-weight: bold;
}
h2.section {
font-weight: bold;
font-size: x-large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: left;

}
ul.itemize {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
h3.subsection {
font-weight: bold;
font-size: large;
margin-top: 0.9ex;
margin-bottom: 0.5ex;
text-align: left;

}
dl.description dt { font-weight: bold; }
div.flex_docname {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_ipr {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_intendedstatus {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_titleabbrev {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_ietfarea {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_xml_rfckeyword {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authororg {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authororgabbrev {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authoremailaddr {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_entityxref {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.float {
border: 2px solid black;
text-align: center;
}
div.listings {
font-family: monospace;
}
div.float-caption {
text-align: center;
border: 2px solid black;
padding: 1ex;
margin: 1ex;
}
div.flex_embeddedbibxml {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_bibxml {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
</style>
</head>
<body>
<h1 class="title"><a id='magicparlabel-1' />
Hypertext Transport Protocol (HTTP) Session Continuation Protocol</h1>
<div class="standard"><a id='magicparlabel-2' />
<div class="flex_docname"><div class="plain_layout"><a id='magicparlabel-6' />
draft-williams-websec-session-continue-proto-00</div>
</div><div class="flex_ipr"><div class="plain_layout"><a id='magicparlabel-10' />
trust200902</div>
</div><div class="flex_intendedstatus"><div class="plain_layout"><a id='magicparlabel-14' />
std</div>
</div><div class="flex_titleabbrev"><div class="plain_layout"><a id='magicparlabel-18' />
HTTP Session Problem</div>
</div><div class="flex_ietfarea"><div class="plain_layout"><a id='magicparlabel-22' />
Security Area</div>
</div><div class="flex_xml_rfckeyword"><div class="plain_layout"><a id='magicparlabel-26' />
Internet-Draft</div>
</div><div class="flex_pi"><div class="plain_layout"><a id='magicparlabel-30' />
tocindent="no"</div>
</div><div class="flex_pi"><div class="plain_layout"><a id='magicparlabel-34' />
comments="yes"</div>
</div><div class="flex_pi"><div class="plain_layout"><a id='magicparlabel-38' />
inline="yes"</div>
</div></div>

<div class="author"><div class="author_item"><a id='magicparlabel-39' />
Nicolas Williams<div class="flex_authororg"><div class="plain_layout"><a id='magicparlabel-43' />
Cryptonector, LLC</div>
</div><div class="flex_authororgabbrev"><div class="plain_layout"><a id='magicparlabel-47' />
Cryptonector</div>
</div><div class="flex_authoremailaddr"><div class="plain_layout"><a id='magicparlabel-51' />
nico@cryptonector.com</div>
</div></div>
</div>

<div class="abstract"><div class="abstract_label">Abstract</div>
<div class="abstract_item"><a id='magicparlabel-52' />
One of the most often talked about problems in web security is &ldquo;cookies&rdquo;. Web cookies are a method of associating requests with &ldquo;sessions&rdquo; that may have been authenticated somehow. Cookies are a form of bearer token that leave much to be desired. This document proposes a session &ldquo;continuation&rdquo; protocol for HyperText Transport Protocol (HTTP).</div>
</div>
<div class="standard"><a id='magicparlabel-53' />
</div>
<div class='toc'><div class='tochead part_'>Table of Contents</div>

<div class='lyxtoc-1'><a href='#magicparlabel-54' class='tocentry'>1 Introduction</a> <a href='#magicparlabel-54' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-76' class='tocentry'>2 Session Keying</a> <a href='#magicparlabel-76' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-87' class='tocentry'>2.1 Mixing HTTP and HTTPS</a> <a href='#magicparlabel-87' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-2'><a href='#magicparlabel-89' class='tocentry'>2.2 Authenticated Session Keying</a> <a href='#magicparlabel-89' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-2'><a href='#magicparlabel-91' class='tocentry'>2.3 Unauthenticated Session Keying</a> <a href='#magicparlabel-91' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-94' class='tocentry'>3 Session Initiation</a> <a href='#magicparlabel-94' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-173' class='tocentry'>4 Session Scope: Sharing Sessions Across Servers</a> <a href='#magicparlabel-173' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-181' class='tocentry'>5 Unauthenticated to Authenticated Session Upgrade</a> <a href='#magicparlabel-181' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-183' class='tocentry'>6 Session Continuation</a> <a href='#magicparlabel-183' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-207' class='tocentry'>6.1 Alternative: Define Session Scheme for WWW-Authenticate</a> <a href='#magicparlabel-207' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-209' class='tocentry'>7 Logout</a> <a href='#magicparlabel-209' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-211' class='tocentry'>8 Inquiring Session Status</a> <a href='#magicparlabel-211' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-213' class='tocentry'>9 Analysis</a> <a href='#magicparlabel-213' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-226' class='tocentry'>10 IANA Considerations</a> <a href='#magicparlabel-226' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-228' class='tocentry'>11 Security Considerations</a> <a href='#magicparlabel-228' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-240' class='tocentry'>12 Normative References</a> <a href='#magicparlabel-240' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-276' class='tocentry'>13 Informative References</a> <a href='#magicparlabel-276' class='tocarrow'>&gt;</a></div>
</div>

<h2 class="section"><span class="section_label">1</span> <a id='magicparlabel-54' />
<a id="sec_Introduction" />
Introduction</h2>
<div class="standard"><a id='magicparlabel-55' />
The motivation for this protocol is described in <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-59' />
I-D.williams-websec-session-continue-prob</div>
</div>.</div>

<div class="standard"><a id='magicparlabel-60' />
We define a protocol for cryptographic &ldquo;session continuation&rdquo; for HyperText Transport Protocol (HTTP) <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-64' />
RFC2616</div>
</div>. Session continuation is the act of binding an HTTP request to a &ldquo;session&rdquo;. A &ldquo;session&rdquo; consists of all the HTTP requests by a given user (possibly an authenticated user, or possibly an anonymous user). This protocol is a cryptographic protocol that aims to meet all the requirements given in <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-68' />
I-D.williams-websec-session-continue-prob</div>
</div>.</div>

<div class="standard"><a id='magicparlabel-69' />
The protocol consists of:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-70' />
a request header carrying a keyed Message Authentication Code (MAC) that prove possession of a shared session key (shared between the user and the server);</li>
<li class="itemize_item"><a id='magicparlabel-71' />
a response header advertising a default session scope to clients;</li>
<li class="itemize_item"><a id='magicparlabel-72' />
a session identification in the form of a URI;</li>
<li class="itemize_item"><a id='magicparlabel-73' />
optional server-side statelessness by storing state on the client-side, encrypted in a secret key known to the server;</li>
<li class="itemize_item"><a id='magicparlabel-74' />
a request header for requesting the establishment of a session;</li>
<li class="itemize_item"><a id='magicparlabel-75' />
a response header for indicating the establishment of a session, and including a session URI and any optional state to be repeated by the client.</li>
</ul>
<h2 class="section"><span class="section_label">2</span> <a id='magicparlabel-76' />
Session Keying</h2>
<div class="standard"><a id='magicparlabel-77' />
There are two methods for keying an HTTP session:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-78' />
session keys are output by HTTP authentication;</li>
<li class="itemize_item"><a id='magicparlabel-79' />
or session keys are asserted by the client;</li>
</ul>
<div class="standard"><a id='magicparlabel-80' />
For the key assertion method TLS with confidentiality protection is clearly REQUIRED for security. We've considered the possibility of using Diffie-Hellman key agreement or RSA key transport, but as that would duplicate functionality that is in TLS we consider that out of scope for the time being. (We could also use the TLS extractor to generate keys, but that would be an unnecessary complication and would provide very little additional value.)</div>

<div class="standard"><a id='magicparlabel-81' />
[XXX Should we have distinct session keys for request and response MACs?]</div>

<div class="standard"><a id='magicparlabel-82' />
In either case a single master key is generated or asserted and a Key Derivation Function (KDF) <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-86' />
RFC5869</div>
</div> is used to generate the session keys for use with HTTP and HTTPS. Keys are derived by applying the negotiated KDF to the master key (output by the HTTP authentication method, or asserted) and either &ldquo;secure&rdquo; or &ldquo;insecure&rdquo; as the salt. All session keys for MAC algorithms specified here SHALL be 128 bits long.</div>
<h3 class="subsection"><span class="subsection_label">2.1</span> <a id='magicparlabel-87' />
Mixing HTTP and HTTPS</h3>
<div class="standard"><a id='magicparlabel-88' />
We expect that many sites will continute to mix HTTP and HTTPS for various reasons. To make this possible sessions will have two session keys: one for use over HTTPS, and the other for use over HTTP.</div>
<h3 class="subsection"><span class="subsection_label">2.2</span> <a id='magicparlabel-89' />
Authenticated Session Keying</h3>
<div class="standard"><a id='magicparlabel-90' />
When an HTTP client uses HTTP authentication, and the authentication mechanism used can establish a session key, then the client SHOULD request session initiation using a shared session key output by the HTTP authentication mechanism. The client MUST send the session initiation header concurrently with the last HTTP authentication message.</div>
<h3 class="subsection"><span class="subsection_label">2.3</span> <a id='magicparlabel-91' />
Unauthenticated Session Keying</h3>
<div class="standard"><a id='magicparlabel-92' />
Sessions for unauthenticated users may appear to make little sense at first. This is useful, for example, and just as web cookies are, for tracking &ldquo;shopping carts&rdquo; when a user is window shopping, so to speak.</div>

<div class="standard"><a id='magicparlabel-93' />
For unauthenticated session initiation the client merely requests the creation of a session with an asserted session key, for lack of a better choice.</div>
<h2 class="section"><span class="section_label">3</span> <a id='magicparlabel-94' />
Session Initiation</h2>
<div class="standard"><a id='magicparlabel-95' />
Sessions are always initiated by the client by including a Session-Init header in the client's request carrying the client's proposal for a session.</div>

<div class="standard"><a id='magicparlabel-96' />
Servers that support sessions will respond by creating a session and returning a session ID URI.</div>

<div class="standard"><a id='magicparlabel-97' />
The Session-Init proposal header's value consists of a comma-separated list of proposal parameters:</div>

<div class="standard"><a id='magicparlabel-98' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-102' />
</div>
<div class='float float-listings'><pre>   session-param = token "=" ( token | quoted-string )
   Session-Init = 1#session-param</pre></div>


<div class="plain_layout"><a id='magicparlabel-108' />
<div class='float-caption float-caption-figure'>Figure 1:<div class="plain_layout"><a id='magicparlabel-112' />
Session-Init request header</div>
</div></div>
</div>


<div class="standard"><a id='magicparlabel-113' />
The following session parameters are defined:</div>

<dl class='description'><dt class="description_label">Key-Method</dt>
<dd class="description_item"><a id='magicparlabel-114' />
 The type of keying: &ldquo;auth&rdquo; (key will be output by HTTP authentication), &ldquo;c-assert&rdquo; (key is asserted in this Session-Init) or &ldquo;s-assert&rdquo; (the server is expected to assert a key). In the &ldquo;auth&rdquo; case the Session-Init MUST also carry a nonce and a MAC.</dd>
<dt class="description_label">Key</dt>
<dd class="description_item"><a id='magicparlabel-115' />
 The key that the client asserts, if the client asserts a key.</dd>
<dt class="description_label">MAC-Algs</dt>
<dd class="description_item"><a id='magicparlabel-116' />
 The MAC algorithms supported by the client. This document defines only &ldquo;HMAC-SHA-1&rdquo; (HMAC with SHA-1), &ldquo;HMAC-SHA-1-96&rdquo; (HMAC with SHA-1 and truncation to 96 bits), &ldquo;HMAC-SHA256&rdquo; (HMAC with SHA256), and &ldquo;HMAC-SHA256-128&rdquo; (HMAC with SHA256 and truncation to 128 bits). All of these use HMAC <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-120' />
RFC2104</div>
</div>. Clients and servers MUST support HMAC-SHA-1-96 and HMAC-SHA256-128. If absent the default value is &ldquo;HMAC-SHA256-128&rdquo;.</dd>
<dt class="description_label">KDF-Algs</dt>
<dd class="description_item"><a id='magicparlabel-121' />
 A list of KDF algorithms. The following are specified here: &ldquo;HKDF-SHA-1&rdquo; (HKDF <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-125' />
RFC5869</div>
</div> with SHA-1) and &ldquo;HKDF-SHA256&rdquo; (HKDF with SHA256). Clients and servers MUST support HKDF-SHA256. If absent the default value is HKDF-SHA256.</dd>
<dt class="description_label">Channel-Binding-Types</dt>
<dd class="description_item"><a id='magicparlabel-126' />
 A comma-separated list of channel binding <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-130' />
RFC5056</div>
</div> types. Clients and servers MUST support 'tls-server-end-point' <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-134' />
RFC5929</div>
</div> when using HTTPS.</dd>
<dt class="description_label">nonce</dt>
<dd class="description_item"><a id='magicparlabel-135' />
 A 128-bit nonce, base64-encoded.</dd>
<dt class="description_label">Previous-Session-URI</dt>
<dd class="description_item"><a id='magicparlabel-136' />
 The URI of a previous session. See <a href="#sec_Unauthenticated_to_Authenticated">5</a>.</dd>
<dt class="description_label">Previous-Session-State</dt>
<dd class="description_item"><a id='magicparlabel-137' />
 The session state for the previous session, if any. See <a href="#sec_Unauthenticated_to_Authenticated">5</a>.</dd>
<dt class="description_label">MAC-&lt;MAC-alg&gt;-&lt;CB-type&gt;</dt>
<dd class="description_item"><a id='magicparlabel-138' />
 A base64-encoded MAC (in the given algorithm) of the Session-Init header value (excluding the MAC session-params), the nonce, the channel binding for the given channel binding type, and the previous session URI and state, if any. The items to be MACed are base64-encoded, then concatenated with commas in the ordered mentioned in the previous sentence, then the keyed MAC is applied.</dd>
<dt class="description_label">Req-MAC-Secure-Content</dt>
<dd class="description_item"><a id='magicparlabel-139' />
 A comma-separated list of indicators of what request content is to be MACed when using HTTPS.</dd>
<dt class="description_label">Resp-MAC-Secure-Content</dt>
<dd class="description_item"><a id='magicparlabel-140' />
 A comma-separated list of indicators of what response content is to be MACed when using HTTPS. If empty then the responses for this session over HTTPS will not contain a MAC (none is needed since if the channel binding is correct in the request then there is no MITM and TLS provides all the necessary protection).</dd>
<dt class="description_label">Req-MAC-Insecure-Content</dt>
<dd class="description_item"><a id='magicparlabel-141' />
 A comma-separated list of indicators of what request content is to be MACed.</dd>
<dt class="description_label">Resp-MAC-Insecure-Content</dt>
<dd class="description_item"><a id='magicparlabel-142' />
 A comma-separated list of indicators of what response content is to be MACed.</dd>
<dt class="description_label">Insecure-Allowed</dt>
<dd class="description_item"><a id='magicparlabel-143' />
 If present the value MUST be &ldquo;true&rdquo;, and indicates that HTTP and HTTPS are both allowed for this session. Otherwise only HTTPS is allowed for this session.</dd>
</dl>
<div class="standard"><a id='magicparlabel-144' />
The MAC-Content indicators are:</div>

<dl class='description'><dt class="description_label">Start</dt>
<dd class="description_item"><a id='magicparlabel-145' />
 The message start line.</dd>
<dt class="description_label">CB</dt>
<dd class="description_item"><a id='magicparlabel-146' />
 Channel binding.</dd>
<dt class="description_label">Body</dt>
<dd class="description_item"><a id='magicparlabel-147' />
 The body of the message. The content transfer encoding (e.g. chunked) is ignored for the purpose of determining the content.</dd>
<dt class="description_label">H-&lt;header-name&gt;</dt>
<dd class="description_item"><a id='magicparlabel-148' />
 The given header name.</dd>
</dl>
<div class="standard"><a id='magicparlabel-149' />
The server responds with a Session-Assign header:</div>

<div class="standard"><a id='magicparlabel-150' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-154' />
</div>
<div class='float float-listings'><pre>   session-URI = &lt;URI&gt;
   session-state = &lt;base64 encoding of server-side state&gt;
   Session-Assign = (1#session-param ",")</pre></div>


<div class="plain_layout"><a id='magicparlabel-161' />
<div class='float-caption float-caption-figure'>Figure 2:<div class="plain_layout"><a id='magicparlabel-165' />
Session-Assign response header</div>
</div></div>
</div>


<div class="standard"><a id='magicparlabel-166' />
The session-params for Session-Assign are:</div>

<dl class='description'><dt class="description_label">Key</dt>
<dd class="description_item"><a id='magicparlabel-167' />
 The server-asserted key, if the client requested a server-asserted key.</dd>
<dt class="description_label">MAC-Alg</dt>
<dd class="description_item"><a id='magicparlabel-168' />
 The name of the MAC algorithm selected by the server from the client's proposal (REQUIRED).</dd>
<dt class="description_label">MAC</dt>
<dd class="description_item"><a id='magicparlabel-169' />
 A MAC of the client's Session-Init header and the server's Session-Assign header (excluding the MAC session-param). This is OPTIONAL when using HTTPS, REQUIRED when using HTTP. [XXX expand].</dd>
<dt class="description_label">URI</dt>
<dd class="description_item"><a id='magicparlabel-170' />
 The URI of the session (REQUIRED).</dd>
<dt class="description_label">State</dt>
<dd class="description_item"><a id='magicparlabel-171' />
 Server-side state to be stored on the client (OPTIONAL).</dd>
<dt class="description_label">Host-Scope</dt>
<dd class="description_item"><a id='magicparlabel-172' />
 A DNS domainname (in A-label form) that the session can be used with. Multiple Scope parameters are allowed. If the domainname starts with a '.' then the session may be used with all server hosts whose domainnames are sub-domains of the given Host-Scope domainname.</dd>
</dl>
<h2 class="section"><span class="section_label">4</span> <a id='magicparlabel-173' />
<a id="sec_Session_Scope__Sharing" />
Session Scope: Sharing Sessions Across Servers</h2>
<div class="standard"><a id='magicparlabel-174' />
A service might be composed of multiple related servers, each with a different hostname. As a result the service may require a client to use the same session across the service's component servers. We provide a mechanism by which the server may indicate a set of such servers to the client: the Host-Scope session-param in the server's Session-Assign response header.</div>

<div class="standard"><a id='magicparlabel-175' />
[XXX We need a way to constrain this for privacy protection reasons. It's not yet clear how the client can judge which Host-Scope paramters to accept or ignore, only that must be allowed to do so.]</div>

<div class="standard"><a id='magicparlabel-176' />
To facilitate interoperable session sharing across heterogeneous server implementations we define a session resource -named by its session URI- that can be obtained with a properly-authenticated GET by authorized entities. The session resource's representation is a application/json document type, containing a JSON-serialized associative array with the following REQUIRED keys:</div>

<dl class='description'><dt class="description_label">Master-Key</dt>
<dd class="description_item"><a id='magicparlabel-177' />
 The session's master key, base64-encoded.</dd>
<dt class="description_label">MAC-Alg</dt>
<dd class="description_item"><a id='magicparlabel-178' />
 The MAC algorithm for this session.</dd>
</dl>
<div class="standard"><a id='magicparlabel-179' />
[XXX We probably want each server to see a different master key, in which case we probably want to use a KDF with the server's hostname as part of the salt.]</div>

<div class="standard"><a id='magicparlabel-180' />
[XXX We probably want to define some OPTIONAL keys, such as &ldquo;User&rdquo;, &ldquo;User-URI&rdquo;, &ldquo;HTTP-Auth-Scheme-Used&rdquo;, &ldquo;HTTP-Auth-Scheme-&lt;param&gt;&rdquo;, and so on.]</div>
<h2 class="section"><span class="section_label">5</span> <a id='magicparlabel-181' />
<a id="sec_Unauthenticated_to_Authenticated" />
Unauthenticated to Authenticated Session Upgrade</h2>
<div class="standard"><a id='magicparlabel-182' />
A client might first establish an unauthenticated session then authenticate the user later. When authentication is done the client might wish to preserve any state associated with the preceding unauthenticated session. The client does this by sending a Session-Init at authentication time with a 'Previous-Session-URI' session-param and, if there was server-assigned session state, a 'Previous-Session-State' session-param.</div>
<h2 class="section"><span class="section_label">6</span> <a id='magicparlabel-183' />
Session Continuation</h2>
<div class="standard"><a id='magicparlabel-184' />
Once a session is established the client binds requests to sessions as described here.</div>

<div class="standard"><a id='magicparlabel-185' />
There are two cases: HTTPS and HTTP. In both cases the client adds a header</div>

<div class="standard"><a id='magicparlabel-186' />
For the HTTPS case the client adds a &ldquo;Session&rdquo; header to its requests with the following content: the session identifier assigned by the server, a nonce generated by the client, and a MAC of the nonce and the TLS channel bindings.</div>

<div class="standard"><a id='magicparlabel-187' />
The value of the Session header consists of a base64-encoded 128-bit nonce and a MAC, using the session's MAC algorithm, of the nonce and the channel binding, each base64-encoded then concatenated in that order:</div>

<div class="standard"><a id='magicparlabel-188' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-192' />
</div>
<div class='float float-listings'><pre>   nonce = &lt;base64-encoded 128-bit nonce&gt;
   MAC = &lt;b64 MAC taken over b64-nonce || b64-CB [|| content]&gt;
   Session = nonce "," MAC</pre></div>


<div class="plain_layout"><a id='magicparlabel-199' />
<div class='float-caption float-caption-figure'>Figure 3:<div class="plain_layout"><a id='magicparlabel-203' />
Session header</div>
</div></div>
</div>


<div class="standard"><a id='magicparlabel-204' />
Where the response must carry a Session header, the form of the value is the same as for requests.</div>

<div class="standard"><a id='magicparlabel-205' />
The MAC is taken over the nonce, the channel bindings, and the content as specified in the Session-Init header used to create this session.</div>

<div class="standard"><a id='magicparlabel-206' />
[XXX Add text indicating that headers to be MACed are to be encoded per-DKIM.]</div>
<h3 class="subsection"><span class="subsection_label">6.1</span> <a id='magicparlabel-207' />
Alternative: Define Session Scheme for WWW-Authenticate</h3>
<div class="standard"><a id='magicparlabel-208' />
One possibility that has some appeal would be to define a new HTTP authentication scheme called &ldquo;Session&rdquo; (say) and use that instead of the &ldquo;Session&rdquo; header defined above. The primary advantage to the WWW-Authenticate approach is that it fits the existing HTTP authentication framework, allowing a server to present to an application the user authentication information embedded in the session state as if the user were re-authenticated in each request. Session continuation can then be seen as a form of fast re-authentication.</div>
<h2 class="section"><span class="section_label">7</span> <a id='magicparlabel-209' />
Logout</h2>
<div class="standard"><a id='magicparlabel-210' />
To logout the client SHOULD perform a DELETE of the session URI.</div>
<h2 class="section"><span class="section_label">8</span> <a id='magicparlabel-211' />
Inquiring Session Status</h2>
<div class="standard"><a id='magicparlabel-212' />
The client MAY do a GET of the session URI. The semantics of the response body for this are not specified here. As explained in <a href="#sec_Session_Scope__Sharing">4</a>, servers also may GET a session URI; see <a href="#sec_Session_Scope__Sharing">4</a> for more details.</div>
<h2 class="section"><span class="section_label">9</span> <a id='magicparlabel-213' />
<a id="sec_Analysis" />
Analysis</h2>
<div class="standard"><a id='magicparlabel-214' />
Quite clearly this protocol meets requirements 1, 2, 3, and 5 from <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-218' />
I-D.williams-websec-session-continue-prob</div>
</div>.</div>

<div class="standard"><a id='magicparlabel-219' />
The security requirements are also met:</div>

<dl class='description'><dt class="description_label">requirement&nbsp;4</dt>
<dd class="description_item"><a id='magicparlabel-220' />
 The active cookie recovery attacks on TLS are adaptive chosen plaintext attacks. These attacks depend on the cookies sent by the client being the same in every request. This protocol uses MAC of at least channel bindings data (which doesn't change for any one connection) salted (so to speak) with a nonce. This use of nonces causes the MAC sent to be different for each request, which defeats the known cookie recovery attacks on TLS. Note that we assume confidentiality protection from TLS; clients MUST NOT negotiate cipher suites that provide no confidentiality protection.</dd>
<dt class="description_label">requirement&nbsp;6</dt>
<dd class="description_item"><a id='magicparlabel-221' />
 This is clearly met by the use of a MAC keyed with a session key not available to attackers. This clearly depends on implementations having decent entropy sources, but this is no different than for TLS. Note, however, that insecure session initiation with key assertion is clearly insecure relative to passive attackers, as well as active attackers that can redirect packet flows so they can observe session initiation.</dd>
<dt class="description_label">requirement_7</dt>
<dd class="description_item"><a id='magicparlabel-222' />
 This is clearly met by using a cryptographically secure KDF to derive distinct keys for use with HTTP and HTTPS.</dd>
<dt class="description_label">requirement_8</dt>
<dd class="description_item"><a id='magicparlabel-223' />
 The use of channel bindings as an input to the MAC meets this requirement.</dd>
<dt class="description_label">requirement_9</dt>
<dd class="description_item"><a id='magicparlabel-224' />
 This requirement is clearly met by having DELETE of a session URI terminate a session. It is important that clients promptly destroy any remnant of deleted sessions' state so that servers get no benefit from not deleting sessions when the clients demand it.</dd>
<dt class="description_label">requirement_10</dt>
<dd class="description_item"><a id='magicparlabel-225' />
 This is clearly met by using headers that proxies will pass unmodified.</dd>
</dl>
<h2 class="section"><span class="section_label">10</span> <a id='magicparlabel-226' />
<a id="sec_IANA_Considerations" />
IANA Considerations</h2>
<div class="standard"><a id='magicparlabel-227' />
This document creates a number of new HTTP request and response headers. These headers will need to be added to the HTTP header registry: &lt;TBD&gt;.</div>
<h2 class="section"><span class="section_label">11</span> <a id='magicparlabel-228' />
<a id="sec_Security_Considerations" />
Security Considerations</h2>
<div class="standard"><a id='magicparlabel-229' />
This session continuation protocol appears to meet the requirements outlined in <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-233' />
I-D.williams-websec-session-continue-prob</div>
</div>. [XXX Add analysis. In particular explain how MAC(CB + nonce) is sufficient to defeat BEAST and CRIME.]</div>

<div class="standard"><a id='magicparlabel-234' />
This proposal meets security requirements from the problem statement <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-238' />
I-D.williams-websec-session-continue-prob</div>
</div>. See <a href="#sec_Analysis">9</a> for details.</div>

<div class="standard"><a id='magicparlabel-239' />
[...]</div>
<h2 class="section"><span class="section_label">12</span> <a id='magicparlabel-240' />
Normative References</h2>
<div class="standard"><a id='magicparlabel-241' />
<div class="flex_embeddedbibxml"><div class="plain_layout"><a id='magicparlabel-245' />
&lt;reference anchor='I-D.williams-websec-session-continue-prob'&gt; &lt;front&gt; &lt;title&gt;Hypertext Transport Protocol (HTTP) Session Continuation: Problem Statement&lt;/title&gt; &lt;author initials='N.' surname='Williams' fullname='Nicolas Williams'&gt; &lt;organization /&gt; &lt;/author&gt; &lt;date month='January' day='1' year='2013' /&gt; &lt;abstract&gt;&lt;t&gt;Abstract One of the most often talked about problems in web security is “cookies”. Web cookies are a method of associating requests with “sessions” that may have been authenticated somehow. Cookies are a form of bearer token that leave much to be desired. This document describes the session “continuation” problem for the HyperText Transport Protocol (HTTP).&lt;/t&gt;&lt;/abstract&gt; &lt;/front&gt; &lt;seriesInfo name='Internet-Draft' value='draft-williams-websec-session-continue-prob-00' /&gt; &lt;format type='TXT' target='http://www.ietf.org/internet-drafts/draft-draft-williams-websec-session-continue-prob-00.txt' /&gt; &lt;/reference&gt; </div>
</div></div>

<div class="standard"><a id='magicparlabel-246' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-250' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2104.xml">rfc2104</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-251' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-255' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2616.xml">rfc2616</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-256' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-260' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml">rfc5246</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-261' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-265' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5056.xml">rfc5056</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-266' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-270' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5929.xml">rfc5929</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-271' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-275' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5869.xml">rfc5869</a></div>
</div></div>
<h2 class="section"><span class="section_label">13</span> <a id='magicparlabel-276' />
<a id="sec_Normative_References" />
Informative References</h2>
<div class="standard"><a id='magicparlabel-277' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-281' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2617.xml">rfc2617</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-282' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-286' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5849.xml">rfc5849</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-287' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-291' />
<a href="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-oauth-v2.xml">I-D.ietf-oauth-v2</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-292' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-296' />
<a href="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.hallambaker-httpintegrity.xml">I-D.hallambaker-httpintegrity</a></div>
</div></div>
</body>
</html>
